[build-system]
requires = [
    "setuptools>=70",
    "setuptools-scm>=8",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "histo-omics-lite"
dynamic = ["version"]
description = "Lean histology-transcriptomics contrastive learning toolkit"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AltaLanta ML", email = "ml@altalanta.ai"}
]
requires-python = ">=3.10"
keywords = ["pytorch", "simclr", "clip", "histology", "omics", "contrastive-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
dependencies = [
    "torch>=2.1,<3.0",
    "torchvision>=0.16,<1.0",
    "webdataset>=0.2.57,<0.3",
    "hydra-core>=1.3,<1.4",
    "typer[all]>=0.9,<0.11",
    "rich>=13.7,<14.0",
    "polars>=0.20,<0.21",
    "pydantic>=2.4,<3.0",
    "numpy>=1.24,<2.0",
    "scikit-learn>=1.3,<1.5",
    "umap-learn>=0.5,<0.6",
    "matplotlib>=3.8,<3.9",
    "seaborn>=0.13,<0.14",
    "Pillow>=10.0,<11.0",
    "tqdm>=4.66,<5.0",
    "pyyaml>=6.0,<7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "pytest-mock>=3.12",
    "pytest-snapshot>=0.9",
    "hypothesis>=6.88",
    "mypy>=1.7",
    "ruff>=0.1.8",
    "pre-commit>=3.5",
    "coverage>=7.3",
    "types-Pillow",
    "types-PyYAML",
    "mkdocs-material>=9.5",
    "mkdocstrings[python]>=0.24"
]
cuda = [
    "cuda-python>=12.1",
    "pynvml>=11.5"
]
viz = [
    "plotly>=5.18",
    "kaleido>=0.2"
]

[project.scripts]
histo-omics-lite = "histo_omics_lite.cli:app"

[project.urls]
Homepage = "https://github.com/altalanta/histo-omics-lite"
Documentation = "https://altalanta.github.io/histo-omics-lite/"
Source = "https://github.com/altalanta/histo-omics-lite"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "node-and-date"
fallback_version = "0.0.0"
write_to = "src/histo_omics_lite/_version.py"

[tool.pytest.ini_options]
addopts = "-ra -q --cov=src --cov-report=term-missing --cov-fail-under=90"
filterwarnings = [
    "ignore::UserWarning"
]

[tool.coverage.run]
branch = true
source = ["src/histo_omics_lite"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_untyped_defs = true
strict_optional = true
plugins = ["pydantic.mypy"]

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "B",
    "C4",
    "UP",
    "S",
    "N",
    "ANN",
    "TID",
    "ARG"
]
ignore = [
    "ANN101",
    "ANN102"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.bandit]
targets = ["src/histo_omics_lite"]
skips = ["B101"]
